;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 04.12.2015
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega328P
;Program type            : Application
;AVR Core Clock frequency: 16,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega328p.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;#include <delay.h>
;
;// Declare your global variables here
;
;#define seg_a 1
;#define seg_b 2
;#define seg_c 4
;#define seg_d 8
;#define seg_e 16
;#define seg_f 32
;#define seg_g 64
;
;#define r_1 PORTB.0
;#define r_2 PORTB.1
;#define r_3 PORTB.2
;#define p_1 PINB.0
;#define p_2 PINB.1
;#define p_3 PINB.2
;#define sv PORTB.4
;
;flash unsigned char  seg[10] = {seg_g, seg_a+seg_d+seg_e+seg_f+seg_g, seg_c+seg_f, seg_e+seg_f, seg_a+seg_d+seg_e, seg_b ...
;unsigned int a, sum, m60, pm60, m70, pm70, m80, pm80, m90, pm90, m100, pm100;
;unsigned long timer, timer2;
;unsigned char kol, tt1, tr2;
;bit flag_zvuk, flag_vikl;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0035 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0036 // Place your code here
; 0000 0037 timer = timer + 1;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0038 timer2 = timer2 + 1;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0039 }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;
;// Voltage Reference: AVCC pin
;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 0040 {
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0041 ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $0000001A VOL: 0
;	adc_input -> Y+0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0042 // Delay needed for the stabilization of the ADC input voltage
; 0000 0043 delay_us(10);
;PCODE: $0000001E VOL: 0
; 0000 0044 // Start the AD conversion
; 0000 0045 ADCSRA|=(1<<ADSC);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0046 // Wait for the AD conversion to complete
; 0000 0047 while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0048 ADCSRA|=(1<<ADIF);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0049 return ADCW;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 004A }
;PCODE: $0000002E VOL: 0
;
;
;// Timer2 overflow interrupt service routine
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
; 0000 004F {
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0050 // Place your code here
; 0000 0051     if(!flag_zvuk)
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0052     {
; 0000 0053         OCR2A=0x80;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0054         flag_zvuk = 1;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0055         sv = 1;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0056         tr2 = 201 - a*2;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0057     }
; 0000 0058     else
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0059     {
; 0000 005A         if(tt1++ > (2*a))
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 005B         {
; 0000 005C             tt1 = 0;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 005D             OCR2A=0xFF;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 005E             sv = 0;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 005F             flag_vikl = 1;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0060         }
; 0000 0061         if (flag_vikl) if (--tr2 == 0)
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0062         {
; 0000 0063                 flag_vikl = 0;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0064                 flag_zvuk = 0;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0065                 tt1 = 0;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0066                 sv = 1;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0067                 OCR2A=0x80;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0068         }
; 0000 0069 
; 0000 006A     }
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 006B 
; 0000 006C }
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;
;
;
;
;void vivod(int vhod)
; 0000 0072 {
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0073     while(timer < 100);
;PCODE: $0000006D VOL: 0
;	vhod -> Y+0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0074 
; 0000 0075         if (!p_1)
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0076         {
; 0000 0077             r_3 = 0;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0078             r_2 = 0;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0079             r_1 = 0;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 007A             PORTD = seg[vhod / 100];
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 007B             r_1 = 1;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 007C         }
; 0000 007D 
; 0000 007E     while(timer < 200);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 007F 
; 0000 0080         if (!p_2)
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0081         {
; 0000 0082             r_1 = 0;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0083             r_2 = 0;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0084             r_3 = 0;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0085             PORTD = seg[(vhod / 10) - (vhod/100)*10];
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0086             r_2 = 1;
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 0087         }
; 0000 0088 
; 0000 0089     while(timer < 300);
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 008A 
; 0000 008B         if (!p_3)
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 008C         {
; 0000 008D             r_2 = 0;
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 008E             r_3 = 0;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 008F             r_1 = 0;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0090             PORTD = seg[vhod  - (vhod/100)*100 - ((vhod / 10) - (vhod/100)*10)*10];
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0091             r_3 = 1;
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 0092         }
; 0000 0093 
; 0000 0094         timer = 0;
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 0095 }
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;
;void main(void)
; 0000 0098 {
;PCODE: $000000DA VOL: 0
; 0000 0099 // Declare your local variables here
; 0000 009A 
; 0000 009B // Crystal Oscillator division factor: 1
; 0000 009C #pragma optsize-
; 0000 009D CLKPR=(1<<CLKPCE);
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 009E CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 009F #ifdef _OPTIMIZE_SIZE_
; 0000 00A0 #pragma optsize+
; 0000 00A1 #endif
; 0000 00A2 
; 0000 00A3 // Input/Output Ports initialization
; 0000 00A4 // Port B initialization
; 0000 00A5 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00A6 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00A7 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00A8 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 00A9 
; 0000 00AA // Port C initialization
; 0000 00AB // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00AC DDRC=(0<<DDC6) | (1<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 00AD // State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00AE PORTC=(0<<PORTC6) | (0<<PORTC5) | (1<<PORTC4) | (1<<PORTC3) | (1<<PORTC2) | (1<<PORTC1) | (1<<PORTC0);
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 00AF 
; 0000 00B0 // Port D initialization
; 0000 00B1 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00B2 DDRD=(0<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 00B3 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00B4 PORTD=(0<<PORTD7) | (1<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 00B5 
; 0000 00B6 // Timer/Counter 0 initialization
; 0000 00B7 // Clock source: System Clock
; 0000 00B8 // Clock value: 16000,000 kHz
; 0000 00B9 // Mode: Normal top=0xFF
; 0000 00BA // OC0A output: Disconnected
; 0000 00BB // OC0B output: Disconnected
; 0000 00BC // Timer Period: 0,016 ms
; 0000 00BD TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 00BE TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (1<<CS00);
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 00BF TCNT0=0x00;
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 00C0 OCR0A=0x00;
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 00C1 OCR0B=0x00;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 00C2 
; 0000 00C3 
; 0000 00C4 // Timer/Counter 1 initialization
; 0000 00C5 // Clock source: System Clock
; 0000 00C6 // Clock value: Timer1 Stopped
; 0000 00C7 // Mode: Normal top=0xFFFF
; 0000 00C8 // OC1A output: Disconnected
; 0000 00C9 // OC1B output: Disconnected
; 0000 00CA // Noise Canceler: Off
; 0000 00CB // Input Capture on Falling Edge
; 0000 00CC // Timer1 Overflow Interrupt: Off
; 0000 00CD // Input Capture Interrupt: Off
; 0000 00CE // Compare A Match Interrupt: Off
; 0000 00CF // Compare B Match Interrupt: Off
; 0000 00D0 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 00D1 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 00D2 TCNT1H=0x00;
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 00D3 TCNT1L=0x00;
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 00D4 ICR1H=0x00;
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 00D5 ICR1L=0x00;
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 00D6 OCR1AH=0x00;
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 00D7 OCR1AL=0x00;
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 00D8 OCR1BH=0x00;
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 00D9 OCR1BL=0x00;
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 00DA 
; 0000 00DB // Timer/Counter 2 initialization
; 0000 00DC // Clock source: System Clock
; 0000 00DD // Clock value: Timer2 Stopped
; 0000 00DE // Mode: Fast PWM top=0xFF
; 0000 00DF // OC2A output: Inverted PWM
; 0000 00E0 // OC2B output: Disconnected
; 0000 00E1 ASSR=(0<<EXCLK) | (0<<AS2);
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 00E2 TCCR2A=(1<<COM2A1) | (1<<COM2A0) | (0<<COM2B1) | (0<<COM2B0) | (1<<WGM21) | (1<<WGM20);
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 00E3 TCCR2B=(0<<WGM22) | (1<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 00E4 //TCCR2B=(0<<WGM22) | (0<<CS22) | (1<<CS21) | (1<<CS20);
; 0000 00E5 TCNT2=0x00;
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 00E6 OCR2A=0xFF;
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 00E7 OCR2B=0x00;
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 00E8 
; 0000 00E9 
; 0000 00EA // Timer/Counter 0 Interrupt(s) initialization
; 0000 00EB TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (1<<TOIE0);
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 00EC 
; 0000 00ED // Timer/Counter 1 Interrupt(s) initialization
; 0000 00EE TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 00EF 
; 0000 00F0 // Timer/Counter 2 Interrupt(s) initialization
; 0000 00F1 TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (1<<TOIE2);
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 00F2 
; 0000 00F3 // External Interrupt(s) initialization
; 0000 00F4 // INT0: Off
; 0000 00F5 // INT1: Off
; 0000 00F6 // Interrupt on any change on pins PCINT0-7: Off
; 0000 00F7 // Interrupt on any change on pins PCINT8-14: Off
; 0000 00F8 // Interrupt on any change on pins PCINT16-23: Off
; 0000 00F9 EICRA=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 00FA EIMSK=(0<<INT1) | (0<<INT0);
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 00FB PCICR=(0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 00FC 
; 0000 00FD // USART initialization
; 0000 00FE // USART disabled
; 0000 00FF UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 0100 
; 0000 0101 // Analog Comparator initialization
; 0000 0102 // Analog Comparator: Off
; 0000 0103 // The Analog Comparator's positive input is
; 0000 0104 // connected to the AIN0 pin
; 0000 0105 // The Analog Comparator's negative input is
; 0000 0106 // connected to the AIN1 pin
; 0000 0107 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 0108 // Digital input buffer on AIN0: On
; 0000 0109 // Digital input buffer on AIN1: On
; 0000 010A DIDR1=(0<<AIN0D) | (0<<AIN1D);
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 010B 
; 0000 010C // ADC initialization
; 0000 010D // ADC Clock frequency: 1000,000 kHz
; 0000 010E // ADC Voltage Reference: AVCC pin
; 0000 010F // ADC Auto Trigger Source: ADC Stopped
; 0000 0110 // Digital input buffers on ADC0: On, ADC1: On, ADC2: On, ADC3: On
; 0000 0111 // ADC4: On, ADC5: On
; 0000 0112 DIDR0=(0<<ADC5D) | (0<<ADC4D) | (0<<ADC3D) | (0<<ADC2D) | (0<<ADC1D) | (0<<ADC0D);
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 0113 ADMUX=ADC_VREF_TYPE;
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 0114 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 0115 ADCSRB=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 0116 
; 0000 0117 
; 0000 0118 // SPI initialization
; 0000 0119 // SPI disabled
; 0000 011A SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 011B 
; 0000 011C // TWI initialization
; 0000 011D // TWI disabled
; 0000 011E TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 011F 
; 0000 0120 
; 0000 0121 // Global enable interrupts
; 0000 0122 #asm("sei")
;PCODE: $00000133 VOL: 0
	sei
;PCODE: $00000134 VOL: 0
; 0000 0123         a = 0;
;PCODE: $00000135 VOL: 0
; 0000 0124         r_1 = 0;
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 0125         r_2 = 0;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 0126         r_3 = 0;
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 0127         PORTD = 12;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 0128         r_3 = 1;
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 0129         timer2 = 0;
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 012A         while (timer2 < 300000);
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 012B         OCR2A=0xFF;
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 012C         a = 0;
;PCODE: $0000014A VOL: 0
; 0000 012D         TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (0<<CS20);//Âûêë òàéìåð 2
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 012E         TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 012F         r_3 = 0;
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 0130         pm100 = read_adc(0);
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 0131         pm90 = read_adc(1);
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 0132         pm80 = read_adc(2);
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 0133         pm70 = read_adc(3);
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 0134         r_3 = 1;
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 0135         pm60 = read_adc(4);
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 0136         PORTD = seg[0];
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 0137         sv = 0;
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 0138         kol = 10;
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 0139 while (1)
;PCODE: $00000169 VOL: 0
; 0000 013A       {
; 0000 013B       // Place your code here
; 0000 013C 
; 0000 013D         r_3 = 0;
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0000 013E         m100 = read_adc(0);
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 013F         m90 = read_adc(1);
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 0140         m80 = read_adc(2);
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 0141         m70 = read_adc(3);
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 0142         r_3 = 1;
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 0143         m60 = read_adc(4);
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 0144         if((pm100 - 3) > m100)
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 0145         {
; 0000 0146            if((pm100 - 3) > read_adc(0)) a = 100;
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 0147         }
;PCODE: $0000018C VOL: 0
; 0000 0148         else
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 0149         {
; 0000 014A             if((pm100 + 3) < m100)
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 014B             {
; 0000 014C                if((pm100 + 3) < read_adc(0)) pm100 = m100;
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 014D             } else  pm100 = m100;
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 014E         }
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 014F         if((pm90 - 4) > m90)
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 0150         {
; 0000 0151             if((pm90 - 4) > read_adc(1)) if(a==100) a= 90; else a = 80;
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0000 0152         }
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 0153         else
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 0154         {
; 0000 0155             if((pm90 + 4) < m90)
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 0156             {
; 0000 0157                if((pm90 + 4) < read_adc(1)) pm90 = m90;
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0000 0158             } else  pm90 = m90;
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 0159         }
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 015A         if((pm80 - 5) > m80)
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0000 015B         {
; 0000 015C             if((pm80 - 5) > read_adc(2)) if(a==80) a= 70; else a = 60;
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 015D         }
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 015E         else
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 015F         {
; 0000 0160             if((pm80 + 5) < m80)
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 0161             {
; 0000 0162                if((pm80 + 5) < read_adc(2)) pm80 = m80;
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
; 0000 0163             } else  pm80 = m80;
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 0164         }
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0000 0165         if((pm70 - 6) > m70)
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
; 0000 0166         {
; 0000 0167             if((pm70 - 6) > read_adc(3)) if(a==60) a= 50; else a = 40;
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
; 0000 0168         }
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
; 0000 0169         else
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
; 0000 016A         {
; 0000 016B             if((pm70 + 6) < m70)
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 016C             {
; 0000 016D                if((pm70 + 6) < read_adc(3)) pm70 = m70;
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 016E             } else pm70 = m70;
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
; 0000 016F         }
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
; 0000 0170         if((pm60 - 7) > m60)
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
; 0000 0171         {
; 0000 0172             if((pm60 - 7) > read_adc(4)) if(a==40) a= 30; else a = 20;
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
; 0000 0173         }
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
; 0000 0174         else
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
; 0000 0175         {
; 0000 0176             if((pm60 + 7) < m60)
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
; 0000 0177             {
; 0000 0178                if((pm60 + 7) < read_adc(4)) pm60 = m60;
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
; 0000 0179             } else pm60 = m60;
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 017A         }
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
; 0000 017B         if (a > 0)
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
; 0000 017C         {
; 0000 017D             flag_zvuk = 0;
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 017E             tt1 = 0;
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
; 0000 017F             TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (1<<CS00);
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
; 0000 0180             TCCR2B=(0<<WGM22) | (1<<CS22) | (0<<CS21) | (0<<CS20); // Âêë òàéìåð 2
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
; 0000 0181             timer2 = 0;
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
; 0000 0182             while (timer2 < 150000) vivod(a);
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
; 0000 0183 sum += a;
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
; 0000 0184             a = 0;
;PCODE: $00000273 VOL: 0
; 0000 0185             kol--;
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
; 0000 0186             r_1 = 0;
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
; 0000 0187             r_2 = 0;
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
; 0000 0188             r_3 = 0;
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
; 0000 0189             PORTD = seg[kol];
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
; 0000 018A             r_3 = 1;
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
; 0000 018B             if (kol == 0)
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
; 0000 018C             {
; 0000 018D                 TCCR2B=(0<<WGM22) | (0<<CS22) | (1<<CS21) | (1<<CS20);
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
; 0000 018E                 r_3 = 0;
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
; 0000 018F                 a = (sum - 200) / 8;
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
; 0000 0190                 if (sum == 1000) sum = 999;
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
; 0000 0191                 timer2 = 0;
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
; 0000 0192                 while (timer2 < 150000) vivod(sum);
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
; 0000 0193 (*(unsigned char *) 0xb1)=(0<<3       ) | (1<<2       ) | (0<<1       ) | (1<<0       );
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 0194                 while (timer2 < 300000) vivod(sum);
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
; 0000 0195 sum = 0;
;PCODE: $000002A9 VOL: 0
; 0000 0196                 a = 0;
;PCODE: $000002AA VOL: 0
; 0000 0197                 r_1 = 0;
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
; 0000 0198                 r_2 = 0;
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
; 0000 0199                 PORTD = seg[kol];
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
; 0000 019A                 r_3 = 1;
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
; 0000 019B                 kol = 10;
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
; 0000 019C                 timer2 = 0;
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
; 0000 019D             }
; 0000 019E             OCR2A=0xFF;
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
; 0000 019F             TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (0<<CS20);//Âûêë òàéìåð 2
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 01A0             TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
; 0000 01A1             r_3 = 0;
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
; 0000 01A2             pm100 = read_adc(0);
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
; 0000 01A3             pm90 = read_adc(1);
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
; 0000 01A4             pm80 = read_adc(2);
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
; 0000 01A5             pm70 = read_adc(3);
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 01A6             r_3 = 1;
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
; 0000 01A7             pm60 = read_adc(4);
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
; 0000 01A8             sv = 0;
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
; 0000 01A9         }
; 0000 01AA       }
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
; 0000 01AB }
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;
